Loading checkpoint model /speech/ds_pytorch_chkpts_lstm_5/deepspeech_checkpoint_epoch_10_iter_4800.pth
[['/speech/common_voice_de/valid_wav/spk0561_utt001763.wav', 'sie lassen sich an der reaktionsgleichung ablesen']]
[['/speech/german-speechdata-package-v2/dev/2015-02-04-12-57-26_Samson.wav', 'steuerbetrug und steuerhinterziehung senken das bip um rund zweihundert milliarden eur pro jahr']]
Shuffling batches for the following epochs
Warning:  apex was installed without --cpp_ext.  Falling back to Python flatten and unflatten.
DistributedDataParallel(
  (module): DeepSpeech(
    (conv): MaskConv(
      (seq_module): Sequential(
        (0): Conv2d(1, 32, kernel_size=(41, 11), stride=(2, 2), padding=(20, 5))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): Hardtanh(min_val=0, max_val=20, inplace)
        (3): Conv2d(32, 32, kernel_size=(21, 11), stride=(2, 1), padding=(10, 5))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): Hardtanh(min_val=0, max_val=20, inplace)
      )
    )
    (rnns): Sequential(
      (0): BatchRNN(
        (rnn): LSTM(1312, 800, bidirectional=True)
      )
      (1): BatchRNN(
        (batch_norm): SequenceWise (
        BatchNorm1d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
        (rnn): LSTM(800, 800, bidirectional=True)
      )
      (2): BatchRNN(
        (batch_norm): SequenceWise (
        BatchNorm1d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
        (rnn): LSTM(800, 800, bidirectional=True)
      )
      (3): BatchRNN(
        (batch_norm): SequenceWise (
        BatchNorm1d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
        (rnn): LSTM(800, 800, bidirectional=True)
      )
      (4): BatchRNN(
        (batch_norm): SequenceWise (
        BatchNorm1d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True))
        (rnn): LSTM(800, 800, bidirectional=True)
      )
    )
    (fc): Sequential(
      (0): SequenceWise (
      Sequential(
        (0): BatchNorm1d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Linear(in_features=800, out_features=32, bias=False)
      ))
    )
    (inference_softmax): InferenceBatchSoftmax()
  )
)
Number of parameters: 54825568
